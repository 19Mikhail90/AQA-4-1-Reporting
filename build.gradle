plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
    id 'io.freefair.lombok' version '5.3.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_11
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

def allureVersion = "2.16.1",
    selenideVersion = "6.1.1",
    junitVersion = "5.8.2"

allure {
    version = allureVersion
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion")
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    useJUnitPlatform()
    systemProperty 'selenide.headless', System.getProperty('selenide.headless')
}